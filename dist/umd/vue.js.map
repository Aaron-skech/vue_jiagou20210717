{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/index.js"],"sourcesContent":["export function isObject(data){\r\n    return typeof data === 'object' && data !==null;\r\n}\r\nexport function def(data,key,value){\r\n    Object.defineProperty(data,key,{\r\n        enumerable:false,\r\n        configurable:false,\r\n        value:value\r\n    })\r\n\r\n}\r\nexport function proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n         get(){\r\n              return vm[source][key];\r\n         },\r\n         set(){\r\n              vm[source][key] = newValue;\r\n\r\n         }\r\n    })\r\n\r\n}","//我要重写数组的哪些方法 7个 push shift unshif pop reverse sort splice  \r\n\r\nlet oldArraymethods = Array.prototype;\r\n// value.__proto__ = arrayMethods; 向上查找 先查找自己重写的方法 如果没有就会查找 arrayMethods原型上的方法\r\n\r\nexport let arrayMethods = Object.create(oldArraymethods);\r\n\r\nconst methods =[\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'sort',\r\n    'splice',\r\n    'reverse'\r\n];\r\nmethods.forEach(methods=>{\r\n    arrayMethods[methods] = function(...args){\r\n        console.log('用户调用了push方法')//AOP 切片编程\r\n           const result =  oldArraymethods[methods].apply(this,args);// 调用原生的数组方法\r\n            // push unshift 添加的元素可能还是一个对象\r\n            let  inserted;  //当前用户插入的元素\r\n            let  ob = this.__ob__;\r\n            switch(methods){\r\n                case 'push':\r\n                case 'unshift':\r\n                    inserted = args\r\n                    break;\r\n                case 'splice':  // 3个参数\r\n                     inserted = args.slice(2)//第三个参数 新增的数据\r\n                    break;\r\n                    default:\r\n                     break\r\n            };\r\n            if(inserted){\r\n                ob.observerArray(inserted)//将新增的数据继续进行观测\r\n            }\r\n           return result;\r\n    }\r\n})","import { isObject,def} from \"../util/index\";\r\nimport { arrayMethods } from './array.js';\r\nclass Observer{\r\n    // constructor(value){  // 仅仅是初始化的操作\r\n    //     // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\r\n    //     // value.__ob__ = this; // 我给每一个监控过的对象都增加一个__ob__属性\r\n    //     def(value,'__ob__',this);\r\n    //     if(Array.isArray(value)){\r\n    //         // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\r\n    //         // 前端开发中很少很少 去操作索引 push shift unshift \r\n    //         value.__proto__ = arrayMethods;\r\n    //         // 如果数组里放的是对象我再监控\r\n    //         this.observerArray(value);\r\n    //     }else{\r\n    //          // 对数组监控\r\n    //         this.walk(value); // 对对象进行观测\r\n    //     }\r\n    // }\r\n    // observerArray(value){ // [{}]\r\n    //     for(let i = 0; i < value.length;i++){\r\n    //         observe(value[i]);\r\n    //     }\r\n    // }\r\n      constructor(value){\r\n          //value.__ob__ = this;//我给每一个监控的对象都增加一个__ob__属性\r\n           def(value,'__ob__',this)\r\n          if(Array.isArray(value)){\r\n              //如果是数组的话 并不会对索引进行观测 因为会导致性能问题\r\n              // 前端开发中很少取操作索引 可以用 push shift unshift\r\n              // 如果数组里面放的是对象 我再进行监控\r\n              this.observerArray(value);\r\n          }else{\r\n              this.walk(value);\r\n          }\r\n      }\r\n    observerArray(value){\r\n        value.__proto__ = arrayMethods;\r\n        for(let i=0; i<value.length; i++){\r\n            observe(value[i]);\r\n        }\r\n    }\r\n    walk(data){\r\n        let keys = Object.keys(data); // [name,age,address]\r\n        // 如果这个data 不可配置 直接reurn\r\n        keys.forEach((key)=>{\r\n            defineReactive(data,key,data[key]);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction defineReactive(data,key,value){\r\n\r\n     observe(value); // 递归实现深度检测\r\n    Object.defineProperty(data,key,{\r\n        configurable:true,\r\n        enumerable:false,\r\n        get(){ //  获取值的时候做一些操作\r\n            return value;\r\n        },\r\n        set(newValue){ // 也可以做一些操作\r\n           \r\n            if(newValue === value) return;\r\n            observe(newValue); // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\r\n            console.log('更新数据')\r\n            value = newValue;\r\n        }\r\n    });\r\n}\r\n\r\nexport function observe(data){\r\n   \r\n     let isObj = isObject(data);\r\n     if(!isObj){\r\n         return\r\n     }\r\n     return new Observer(data);\r\n\r\n}","import { observe } from './observer/index';\r\nimport { proxy } from './util/index'\r\nexport function initState(vm){\r\n\r\n    const opts = vm.$options;\r\n    if(opts.props){\r\n         initProps(vm);\r\n    };\r\n    if(opts.data){\r\n         initData(vm);\r\n    };\r\n    if(opts.methods){\r\n         initMethod(vm);\r\n    };\r\n    if(opts.computed){\r\n         initComputed(vm);\r\n    };\r\n    if(opts.watch){\r\n         initWatch(vm);\r\n    };\r\n\r\n}\r\n\r\nfunction initProps(){\r\n\r\n}\r\n\r\nfunction initData(vm){\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function' ? data.call(vm):data;\r\n    // 为了让用户更好的使用 我希望 可以使用vm.xxx\r\n\r\n    for(let key in data){\r\n         proxy(vm,'_data',key)\r\n    }\r\n     \r\n    observe(data)\r\n    \r\n}\r\nfunction initMethod(){\r\n    \r\n}\r\nfunction initComputed(){\r\n    \r\n}\r\nfunction initWatch(){\r\n    \r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nlet root = null; // ast语法树的树根\r\nlet currentParent; // 标识当前父亲是谁\r\nlet stack = [];\r\nconst ELEMENT_TYPE = 1;\r\nconst TEXT_TYPE = 3;\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n    return {\r\n        tag: tagName,\r\n        type: ELEMENT_TYPE,\r\n        children: [],\r\n        attrs,\r\n        parent: null\r\n    }\r\n}\r\nfunction start(tagName, attrs) {\r\n    // 遇到开始标签 就创建一个ast元素s\r\n    let element = createASTElement(tagName,attrs);\r\n    if(!root){\r\n        root = element;\r\n    }\r\n    currentParent = element; // 把当前元素标记成父ast树\r\n    stack.push(element); // 将开始标签存放到栈中\r\n}\r\nfunction chars(text) {\r\n    text = text.replace(/\\s/g,'');\r\n    if(text){\r\n        currentParent.children.push({\r\n            text,\r\n            type:TEXT_TYPE\r\n        })\r\n    }\r\n}\r\nfunction end(tagName) {\r\n    let element = stack.pop(); // 拿到的是ast对象\r\n    // 我要标识当前这个p是属于这个div的儿子的\r\n    currentParent = stack[stack.length-1];\r\n    if(currentParent){\r\n        element.parent = currentParent;\r\n        currentParent.children.push(element); // 实现了一个树的父子关系\r\n    }\r\n}\r\nexport function parseHTML(html) {\r\n    // 不停的去解析html字符串\r\n    while (html) {\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd == 0) {\r\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\r\n            let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\r\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]); // 2解析结束标签\r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd);\r\n        }\r\n        if (text) {\r\n            advance(text.length);\r\n            chars(text); // 3解析文本\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        let start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length); // 将标签删除\r\n            let end, attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // 将属性进行解析\r\n                advance(attr[0].length); // 将属性去掉\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                });\r\n            }\r\n            if (end) { // 去掉开始标签的 >\r\n                advance(end[0].length);\r\n                return match\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}\r\n","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\r\n// ?: 匹配不捕获\r\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\r\nimport {parseHTML} from './parser-html';\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction genProps(attrs){ // 处理属性 拼接成属性的字符串\r\n    let str = '';\r\n    for(let i = 0; i < attrs.length;i++){\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style'){\r\n            // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key,value] = item.split(':');\r\n                obj[key] = value\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\nfunction genChildren(el){\r\n    let children = el.children;\r\n    if(children && children.length > 0){\r\n        return `${children.map(c=>gen(c)).join(',')}`\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\nfunction gen(node){\r\n    if(node.type == 1){\r\n        // 元素标签\r\n        return generate(node);\r\n    }else{\r\n        let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\r\n        let tokens = [];\r\n        let match,index;\r\n        // 每次的偏移量 buffer.split()\r\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\r\n        while(match = defaultTagRE.exec(text)){\r\n            index = match.index;\r\n            if(index > lastIndex){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`);\r\n            lastIndex = index + match[0].length;\r\n        }\r\n        if(lastIndex < text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n        }\r\n        return `_v(${tokens.join('+')})`;\r\n    }\r\n}\r\nfunction generate(el){ // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\r\n    let children = genChildren(el);\r\n    let code = `_c(\"${el.tag}\",${\r\n       el.attrs.length?genProps(el.attrs):'undefined'\r\n    }${\r\n        children? `,${children}` :''\r\n    })\r\n    `\r\n    return code;\r\n}\r\nexport function compileToFunction(template) {\r\n    // 1) 解析html字符串 将html字符串 => ast语法树\r\n    let root = parseHTML(template);\r\n    // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\r\n    let code = generate(root);\r\n    // 核心思路就是将模板转化成 下面这段字符串\r\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\r\n    // 将ast树 再次转化成js的语法\r\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello')) \r\n    // 所有的模板引擎实现 都需要new Function + with  都需要function + width\r\n   \r\n    // vue的render 他返回的是虚拟dom\r\n    let renderFn = new Function(`with(this){ return ${code}}`)\r\n        return renderFn;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//   hellpo\r\n//      <p></p>\r\n// </div>\r\n\r\n\r\n// let root = {\r\n//     tag:'div',\r\n//     attrs:[{name:'id',value:'app'}],\r\n//     parent:null,\r\n//     type:1,\r\n//     children:[{\r\n//         tag:'p',\r\n//         attrs:[],\r\n//         parent:root,\r\n//         type:1,\r\n//         children:[\r\n//             {\r\n//                 text:'hello',\r\n//                 type:3\r\n//             }\r\n//         ]\r\n//     }]\r\n// }","class Watcher{\r\n\r\n    constructor(vm,exprOrFn,callback,options){\r\n        this.vm = vm;\r\n        this.exprOrFn = exprOrFn;\r\n        this.callback = callback;\r\n        this.options = options;\r\n\r\n        this.getter = exprOrFn; //将内部传过来的回调函数放到getter 属性上\r\n        this.get();\r\n\r\n\r\n    }\r\n    get(){\r\n        this.getter()\r\n    }\r\n\r\n}\r\n\r\nexport default Watcher;","export function patch(oldVnode,vnode) {\r\n    console.log(oldVnode,vnode);\r\n\r\n    //递归创建真实的节点 替换老的节点\r\n    //1 判断是要更新 还是渲染\r\n\r\n    const isRealElement = oldVnode.nodeType;\r\n\r\n    if(isRealElement){\r\n        const oldElm = oldVnode;\r\n        const parentElm = oldElm.parentNode;//body 需要用父节点进行操作\r\n        let el = createElm(vnode);\r\n        parentElm.insertBefore(el,oldElm.nextSibling);\r\n        parentElm.removeChild(oldElm);\r\n    }\r\n    \r\n  \r\n}\r\n\r\nfunction  createElm(vnode) {\r\n    let { tag, children, key, data, text} = vnode;\r\n      \r\n    // 是标签 创建标签\r\n    //如果不是标签就是文本\r\n\r\n    if(typeof tag ==='string'){\r\n        vnode.el = document.createElement(tag);\r\n        updateProperties(vnode);\r\n        children.forEach((child)=>{\r\n            return vnode.el.appendChild(createElm(child))\r\n        })\r\n\r\n    }else{\r\n        //虚拟dom上面映射着真实dom 方便后续更新操作\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n\r\n     return vnode.el;\r\n\r\n\r\n}\r\n\r\n//更新属性\r\n \r\nfunction updateProperties(vnode) {\r\n\r\n    let newProps = vnode.data || {};\r\n    let el = vnode.el;\r\n    console.log(newProps,el)\r\n    \r\n}","import Watcher from \"./observer/watcher\";\r\nimport { patch } from './vdom/patch';\r\nexport function lifecycleMixin(Vue) {\r\n\r\n    Vue.prototype._update = function(vnode) {\r\n        //要通过虚拟节点 渲染出真是的dom\r\n        const vm = this;\r\n        vm.$el = patch(vm.$el,vnode);// 需要用虚拟节点创建出真实节点 替换掉真是的$el\r\n        \r\n    }\r\n    \r\n}\r\nexport  function mountComponent(vm,el){\r\n\r\n    const options = vm.$options;\r\n\r\n    vm.$el = el;//真实的dom元素\r\n    //渲染页面\r\n\r\n    //Watcher 用来渲染的\r\n    // vm._render 通过解析的render方法 渲染出虚拟dom\r\n    //vm.update 通过虚拟dom 创建出真是的dom _c _v _s \r\n\r\n    let updateComponent = ( ) => {\r\n        //无论是渲染还是更新都会调用此方法\r\n        vm._update(vm._render());\r\n    }\r\n    //渲染watcher  每一个组件都有一个watcher\r\n\r\n    new Watcher(vm,updateComponent,()=>{},true)\r\n\r\n}","import {initState} from './state'\r\n\r\nimport {compileToFunction} from './compiler/index.js'\r\nimport { mountComponent  } from './lifecycle';\r\n\r\n// 在原型上添加一个init方法\r\nexport function initMixin(Vue){\r\n    // 初始化流程\r\n    Vue.prototype._init = function (options) {\r\n        // 数据的劫持\r\n        const vm = this; // vue中使用 this.$options 指代的就是用户传递的属性\r\n        vm.$options = options;\r\n\r\n        // 初始化状态\r\n        initState(vm); // 分割代码\r\n\r\n        // 如果用户传入了el属性 需要将页面渲染出来\r\n        // 如果用户传入了el 就要实现挂载流程\r\n\r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        const options = vm.$options;\r\n        el = document.querySelector(el); \r\n        // 默认先会查找有没有render方法，没有render 会 采用template template也没有就用el中的内容\r\n        if(!options.render){\r\n            // 对模板进行编译\r\n            let template = options.template; // 取出模板\r\n            if(!template && el){\r\n                template = el.outerHTML;\r\n            }\r\n            const render = compileToFunction(template);\r\n            options.render = render;\r\n            // 我们需要将template 转化成render方法 vue1.0 2.0虚拟dom \r\n          //  console.log(render,options.render);\r\n            //渲染当前的组件 挂载当前的组件\r\n            mountComponent(vm,el)\r\n        }\r\n        \r\n      \r\n    }\r\n}","\r\nexport function createElement(tag, data={},...children){\r\n       let key = data.key;\r\n       if(key){\r\n           delete data.key; \r\n       }\r\n       return vnode(tag,data,key,children,undefined)\r\n\r\n}\r\n\r\nexport function createTextNode(text) {\r\n    return vnode(undefined,undefined,undefined,undefined,text);\r\n    \r\n}\r\n\r\nfunction vnode(tag,data,key,children,text) {\r\n\r\n\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text,\r\n    }\r\n    //虚拟节点 就是通过_c _v 实现用对象来描述dom操作 （对象）\r\n\r\n    // 1) 将 template 转成 ast语法树 =》 生产render方法 =》 生成虚拟dom =》 真实dom \r\n     // 重新生成虚拟dom =》 更新dom\r\n\r\n    \r\n}","import { createElement, createTextNode} from './vdom/create-element.js'\r\nexport function renderMixin(Vue){\r\n\r\n    //_c 是创建元素的虚拟节点\r\n    //_v 创建文本的虚拟节点\r\n    //_s JSON.stringify\r\n\r\n    Vue.prototype._c = function () {\r\n        return createElement(...arguments);  \r\n    }\r\n    Vue.prototype._v = function (text) {\r\n        return createTextNode(text);  \r\n    }\r\n    Vue.prototype._s = function (val) {\r\n        return val === null?'':(typeof val === 'object'? JSON.stringify(val):val)\r\n    }\r\n    Vue.prototype._render = function(){\r\n        const vm = this;\r\n        const { render } = this.$options;\r\n         let vnode =   render.call(vm);\r\n         return vnode;\r\n    }\r\n}\r\n","import { initMixin } from './init.js';\r\nimport {renderMixin} from './render.js'\r\nimport {lifecycleMixin } from './lifecycle.js'\r\n\r\nfunction Vue(options){\r\n    this._init(options);\r\n\r\n}\r\n \r\ninitMixin(Vue);\r\nrenderMixin(Vue);\r\nlifecycleMixin(Vue);\r\n\r\nexport default Vue;"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","oldArraymethods","Array","prototype","arrayMethods","create","methods","forEach","args","console","log","result","apply","inserted","ob","__ob__","slice","observerArray","Observer","constructor","isArray","walk","__proto__","i","length","observe","keys","defineReactive","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","Watcher","exprOrFn","callback","options","getter","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","lifecycleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val"],"mappings":"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"}