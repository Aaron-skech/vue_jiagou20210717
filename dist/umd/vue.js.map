{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["export function isObject(data){\r\n    return typeof data === 'object' && data !==null;\r\n}\r\nexport function def(data,key,value){\r\n    Object.defineProperty(data,key,{\r\n        enumerable:false,\r\n        configurable:false,\r\n        value:value\r\n    })\r\n\r\n}\r\nexport function proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n         get(){\r\n              return vm[source][key];\r\n         },\r\n         set(newValue){\r\n              vm[source][key] = newValue;\r\n\r\n         }\r\n    })\r\n\r\n}\r\n\r\nconst LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestory',\r\n    'destroy'\r\n];\r\nlet strats = {};\r\nfunction mergeHook(parentVal,childVal) {\r\n    if(childVal){\r\n        if(parentVal){\r\n            return parentVal.concat(childVal)\r\n\r\n        }else{\r\n            return[childVal]\r\n        }\r\n\r\n    }else{\r\n        return parentVal\r\n    }\r\n    \r\n}\r\nLIFECYCLE_HOOKS.forEach(hook=>{\r\n    strats[hook] = mergeHook;\r\n})\r\n\r\n\r\n\r\nexport function mergeOptions(parent,child) {\r\n   \r\n   // debugger;\r\n    const options = {};\r\n    for(let key in parent){\r\n        mergeField(key);\r\n    \r\n    }\r\n    for(let key in child){//如果是已经合并过的就不用再合并了\r\n        if(!parent.hasOwnProperty(key)){\r\n            mergeField(key);\r\n        }\r\n\r\n    }\r\n    //默认的合并策略 但是有些属性需要特殊的合并方式\r\n    function mergeField(key) {\r\n        if(strats[key]){\r\n            return options[key] = strats[key](parent[key],child[key])\r\n        }\r\n        if(typeof parent[key]==='object' && typeof child[key] === 'object'){\r\n            options[key] = {\r\n                ...parent[key],\r\n                ...child[key]\r\n            }\r\n        }else if(child[key] == null){\r\n            options[key] = parent[key];\r\n\r\n        }else{\r\n            options[key] = child[key];\r\n\r\n        }\r\n    }\r\n\r\n    return options;\r\n}","//我要重写数组的哪些方法 7个 push shift unshif pop reverse sort splice  \r\n\r\nlet oldArraymethods = Array.prototype;\r\n// value.__proto__ = arrayMethods; 向上查找 先查找自己重写的方法 如果没有就会查找 arrayMethods原型上的方法\r\n\r\nexport let arrayMethods = Object.create(oldArraymethods);\r\n\r\nconst methods =[\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'sort',\r\n    'splice',\r\n    'reverse'\r\n];\r\nmethods.forEach(methods=>{\r\n    arrayMethods[methods] = function(...args){\r\n        console.log('用户调用了push方法')//AOP 切片编程\r\n           const result =  oldArraymethods[methods].apply(this,args);// 调用原生的数组方法\r\n            // push unshift 添加的元素可能还是一个对象\r\n            let  inserted;  //当前用户插入的元素\r\n            let  ob = this.__ob__;\r\n            switch(methods){\r\n                case 'push':\r\n                case 'unshift':\r\n                    inserted = args\r\n                    break;\r\n                case 'splice':  // 3个参数\r\n                     inserted = args.slice(2)//第三个参数 新增的数据\r\n                    break;\r\n                    default:\r\n                     break\r\n            };\r\n            if(inserted){\r\n                ob.observerArray(inserted)//将新增的数据继续进行观测\r\n            }\r\n           return result;\r\n    }\r\n})","let id = 0;\r\nclass Dep{\r\n   constructor(){\r\n       this.id = id++;\r\n       this.subs = [];\r\n   }\r\n   addSub(watcher){\r\n       console.log(\"__________________\")\r\n       this.subs.push(watcher);\r\n       console.log(this.subs)\r\n   }\r\n   depend(){\r\n      //让这个water记住dep\r\n    //this.subs.push(Dep.target);\r\n    Dep.target.addDep(this);\r\n       \r\n   }\r\n   notify(){\r\n        this.subs.forEach(watcher=>watcher.update())\r\n   }\r\n}\r\n\r\n\r\nlet stack = [];\r\n//目前可以做到将watcher 保留起来 和移除的功能\r\nexport function pushTarget(watcher) {\r\n    console.log(watcher,'watch')\r\n    Dep.target = watcher;\r\n    stack.push(watcher);\r\n}\r\n\r\n\r\nexport function popTarget() {\r\n    stack.pop()\r\n    Dep.target = stack[stack.length-1]\r\n}\r\n\r\nexport default Dep;","import { isObject,def} from \"../util/index\";\r\nimport { arrayMethods } from './array.js';\r\nimport Dep from \"./dep\";\r\nclass Observer{\r\n    // constructor(value){  // 仅仅是初始化的操作\r\n    //     // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\r\n    //     // value.__ob__ = this; // 我给每一个监控过的对象都增加一个__ob__属性\r\n    //     def(value,'__ob__',this);\r\n    //     if(Array.isArray(value)){\r\n    //         // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\r\n    //         // 前端开发中很少很少 去操作索引 push shift unshift \r\n    //         value.__proto__ = arrayMethods;\r\n    //         // 如果数组里放的是对象我再监控\r\n    //         this.observerArray(value);\r\n    //     }else{\r\n    //          // 对数组监控\r\n    //         this.walk(value); // 对对象进行观测\r\n    //     }\r\n    // }\r\n    // observerArray(value){ // [{}]\r\n    //     for(let i = 0; i < value.length;i++){\r\n    //         observe(value[i]);\r\n    //     }\r\n    // }\r\n      constructor(value){\r\n          //value.__ob__ = this;//我给每一个监控的对象都增加一个__ob__属性\r\n           def(value,'__ob__',this)\r\n          if(Array.isArray(value)){\r\n              //如果是数组的话 并不会对索引进行观测 因为会导致性能问题\r\n              // 前端开发中很少取操作索引 可以用 push shift unshift\r\n              // 如果数组里面放的是对象 我再进行监控\r\n              this.observerArray(value);\r\n          }else{\r\n              this.walk(value);\r\n          }\r\n      }\r\n    observerArray(value){\r\n        value.__proto__ = arrayMethods;\r\n        for(let i=0; i<value.length; i++){\r\n            observe(value[i]);\r\n        }\r\n    }\r\n    walk(data){\r\n        let keys = Object.keys(data); // [name,age,address]\r\n        // 如果这个data 不可配置 直接reurn\r\n        keys.forEach((key)=>{\r\n            defineReactive(data,key,data[key]);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction defineReactive(data,key,value){\r\n       let dep = new Dep()\r\n     observe(value); // 递归实现深度检测\r\n    Object.defineProperty(data,key,{\r\n        configurable:true,\r\n        enumerable:true,\r\n        get(){ //  获取值的时候做一些操作\r\n            console.log('取值')//每一个属性都对应着一个自己watcher\r\n            if(Dep.target){\r\n                //取值的时候收集依赖（watcher）\r\n                dep.depend()//意味着要将watcher存起来\r\n                console.log(dep.subs)\r\n            }\r\n            return value;\r\n        },\r\n        set(newValue){ // 也可以做一些操作\r\n            if(newValue === value) return;\r\n            observe(newValue); // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\r\n            console.log('更新数据');\r\n            value = newValue;\r\n            dep.notify();//通知依赖的watcher进行一个更新的操作\r\n        }\r\n    });\r\n}\r\n\r\nexport function observe(data){\r\n   \r\n     let isObj = isObject(data);\r\n     if(!isObj){\r\n         return\r\n     }\r\n     return new Observer(data);\r\n\r\n}","import { observe } from './observer/index';\r\nimport { proxy } from './util/index'\r\nexport function initState(vm){\r\n\r\n    const opts = vm.$options;\r\n    if(opts.props){\r\n         initProps(vm);\r\n    };\r\n    if(opts.data){\r\n         initData(vm);\r\n    };\r\n    if(opts.methods){\r\n         initMethod(vm);\r\n    };\r\n    if(opts.computed){\r\n         initComputed(vm);\r\n    };\r\n    if(opts.watch){\r\n         initWatch(vm);\r\n    };\r\n\r\n}\r\n\r\nfunction initProps(){\r\n\r\n}\r\n\r\nfunction initData(vm){\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function' ? data.call(vm):data;\r\n    // 为了让用户更好的使用 我希望 可以使用vm.xxx\r\n\r\n    for(let key in data){\r\n         proxy(vm,'_data',key)\r\n    }\r\n     \r\n    observe(data)\r\n    \r\n}\r\nfunction initMethod(){\r\n    \r\n}\r\nfunction initComputed(){\r\n    \r\n}\r\nfunction initWatch(){\r\n    \r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\nexport function parseHTML(html) {\r\n    let root = null; // ast语法树的树根\r\nlet currentParent; // 标识当前父亲是谁\r\nlet stack = [];\r\nconst ELEMENT_TYPE = 1;\r\nconst TEXT_TYPE = 3;\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n    return {\r\n        tag: tagName,\r\n        type: ELEMENT_TYPE,\r\n        children: [],\r\n        attrs,\r\n        parent: null\r\n    }\r\n}\r\nfunction start(tagName, attrs) {\r\n    // 遇到开始标签 就创建一个ast元素s\r\n    let element = createASTElement(tagName,attrs);\r\n    if(!root){\r\n        root = element;\r\n    }\r\n    currentParent = element; // 把当前元素标记成父ast树\r\n    stack.push(element); // 将开始标签存放到栈中\r\n}\r\nfunction chars(text) {\r\n    text = text.replace(/\\s/g,'');\r\n    if(text){\r\n        currentParent.children.push({\r\n            text,\r\n            type:TEXT_TYPE\r\n        })\r\n    }\r\n}\r\nfunction end(tagName) {\r\n    let element = stack.pop(); // 拿到的是ast对象\r\n    // 我要标识当前这个p是属于这个div的儿子的\r\n    currentParent = stack[stack.length-1];\r\n    if(currentParent){\r\n        element.parent = currentParent;\r\n        currentParent.children.push(element); // 实现了一个树的父子关系\r\n    }\r\n}\r\n    // 不停的去解析html字符串\r\n    while (html) {\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd == 0) {\r\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\r\n            let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\r\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]); // 2解析结束标签\r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd);\r\n        }\r\n        if (text) {\r\n            advance(text.length);\r\n            chars(text); // 3解析文本\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        let start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length); // 将标签删除\r\n            let end, attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // 将属性进行解析\r\n                advance(attr[0].length); // 将属性去掉\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                });\r\n            }\r\n            if (end) { // 去掉开始标签的 >\r\n                advance(end[0].length);\r\n                return match\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}\r\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nfunction genProps(attrs){ // 处理属性 拼接成属性的字符串\r\n    let str = '';\r\n    for(let i = 0; i < attrs.length;i++){\r\n        let attr = attrs[i];\r\n        if(attr.name === 'style'){\r\n            // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key,value] = item.split(':');\r\n                obj[key] = value\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n}\r\nfunction genChildren(el){\r\n    let children = el.children;\r\n    if(children && children.length > 0){\r\n        return `${children.map(c=>gen(c)).join(',')}`\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\nfunction gen(node){\r\n    if(node.type == 1){\r\n        // 元素标签\r\n        return generate(node);\r\n    }else{\r\n        let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\r\n        let tokens = [];\r\n        let match,index;\r\n        // 每次的偏移量 buffer.split()\r\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\r\n        while(match = defaultTagRE.exec(text)){\r\n            index = match.index;\r\n            if(index > lastIndex){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`);\r\n            lastIndex = index + match[0].length;\r\n        }\r\n        if(lastIndex < text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n        }\r\n        return `_v(${tokens.join('+')})`;\r\n    }\r\n}\r\nexport  function generate(el){ // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\r\n    let children = genChildren(el);\r\n    let code = `_c(\"${el.tag}\",${\r\n       el.attrs.length?genProps(el.attrs):'undefined'\r\n    }${\r\n        children? `,${children}` :''\r\n    })\r\n    `\r\n    return code;\r\n}","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\r\n// ?: 匹配不捕获\r\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\r\nimport {parseHTML} from './parser-html';\r\nimport { generate } from './generate';\r\n\r\nexport function compileToFunction(template) {\r\n    // 1) 解析html字符串 将html字符串 => ast语法树\r\n    let root = parseHTML(template);\r\n    // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\r\n    let code = generate(root);\r\n    // 核心思路就是将模板转化成 下面这段字符串\r\n    //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\r\n    // 将ast树 再次转化成js的语法\r\n    //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello')) \r\n    // 所有的模板引擎实现 都需要new Function + with  都需要function + width\r\n   \r\n    // vue的render 他返回的是虚拟dom\r\n    let renderFn = new Function(`with(this){ return ${code}}`)\r\n        return renderFn;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//   hellpo\r\n//      <p></p>\r\n// </div>\r\n\r\n\r\n// let root = {\r\n//     tag:'div',\r\n//     attrs:[{name:'id',value:'app'}],\r\n//     parent:null,\r\n//     type:1,\r\n//     children:[{\r\n//         tag:'p',\r\n//         attrs:[],\r\n//         parent:root,\r\n//         type:1,\r\n//         children:[\r\n//             {\r\n//                 text:'hello',\r\n//                 type:3\r\n//             }\r\n//         ]\r\n//     }]\r\n// }","import {pushTarget,popTarget} from './dep.js'\r\nlet id = 0;\r\nclass Watcher{\r\n    constructor(vm,exprOrFn,callback,options){\r\n        this.vm = vm;\r\n        this.exprOrFn = exprOrFn;\r\n        this.callback = callback;\r\n        this.options = options;\r\n        this.id = id++;\r\n        this.getter = exprOrFn; //将内部传过来的回调函数放到getter 属性上\r\n        this.depsId = new Set();\r\n        this.deps=[];\r\n        this.get();//调用getter方法会让watcher执行\r\n\r\n\r\n    }\r\n    addDep(dep){//watcher里面不能放重复的dep\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)){\r\n            this.depsId.add(id);\r\n            this.deps.push(dep);\r\n            dep.addSub(this);\r\n        }\r\n\r\n    }\r\n    get(){\r\n        pushTarget(this);// 在渲染之前watcher存起来\r\n        this.getter()//渲染watcher的执行\r\n        popTarget();//渲染之后移除watcher\r\n    }\r\n    update(){\r\n        this.get();\r\n    }\r\n\r\n}\r\n\r\nexport default Watcher;","export function patch(oldVnode,vnode) {\r\n\r\n    //递归创建真实的节点 替换老的节点\r\n    //1 判断是要更新 还是渲染\r\n\r\n    const isRealElement = oldVnode.nodeType;\r\n\r\n    if(isRealElement){\r\n        const oldElm = oldVnode;\r\n        const parentElm = oldElm.parentNode;//body 需要用父节点进行操作\r\n        let el = createElm(vnode);\r\n        parentElm.insertBefore(el,oldElm.nextSibling);\r\n        parentElm.removeChild(oldElm);\r\n          return el;\r\n    }\r\n        // 需要将渲染好的结果返回 \r\n}\r\n\r\nfunction  createElm(vnode) {\r\n    let { tag, children, key, data, text} = vnode;\r\n      \r\n    // 是标签 创建标签\r\n    //如果不是标签就是文本\r\n\r\n    if(typeof tag ==='string'){\r\n        vnode.el = document.createElement(tag);\r\n        updateProperties(vnode);\r\n        children.forEach((child)=>{\r\n            return vnode.el.appendChild(createElm(child))\r\n        })\r\n\r\n    }else{\r\n        //虚拟dom上面映射着真实dom 方便后续更新操作\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n\r\n     return vnode.el;\r\n\r\n\r\n}\r\n\r\n//更新属性\r\n \r\nfunction updateProperties(vnode) {\r\n\r\n    let newProps = vnode.data || {};\r\n    let el = vnode.el;\r\n    for(let key in newProps){\r\n        if(key === 'style'){\r\n            for(let styleName in newProps.style){\r\n                el.style[styleName] = newProps.style[styleName];\r\n            }\r\n        }else if(key === 'class'){\r\n            el.className = newProps.class;\r\n        }else{\r\n            el.setAttribute(key,newProps[key]);\r\n        }\r\n    } \r\n}","import Watcher from \"./observer/watcher\";\r\nimport { patch } from './vdom/patch';\r\nexport function lifecycleMixin(Vue) {\r\n\r\n    Vue.prototype._update = function(vnode) {\r\n        //要通过虚拟节点 渲染出真是的dom\r\n        const vm = this;\r\n    \r\n        vm.$el = patch(vm.$el,vnode);// 需要用虚拟节点创建出真实节点 替换掉真是的$el\r\n        \r\n    }\r\n    \r\n}\r\nexport  function mountComponent(vm,el){\r\n\r\n    const options = vm.$options;\r\n\r\n    vm.$el = el;//真实的dom元素\r\n    //渲染页面\r\n\r\n    //Watcher 用来渲染的\r\n    // vm._render 通过解析的render方法 渲染出虚拟dom\r\n    //vm.update 通过虚拟dom 创建出真是的dom _c _v _s \r\n    callHook(vm,'beforeMount');//挂载之前调用\r\n    let updateComponent = () => {\r\n        //无论是渲染还是更新都会调用此方法\r\n        vm._update(vm._render());\r\n    }\r\n    //渲染watcher  每一个组件都有一个watcher\r\n\r\n    new Watcher(vm,updateComponent,()=>{},true)\r\n    callHook(vm,'mounted');//挂载之后调用\r\n\r\n}\r\nexport function callHook(vm,hook) {\r\n    const handlers = vm.$options[hook];//[fn,fn,fn];\r\n    if(handlers){ //找到对应的钩子依次执行\r\n        for(let i=0;i<handlers.length;i++){\r\n            handlers[i].call(vm);\r\n        }\r\n    }\r\n    \r\n}","import {initState} from './state.js'\r\nimport {compileToFunction} from './compiler/index.js'\r\nimport { mountComponent,callHook  } from './lifecycle.js';\r\nimport { mergeOptions } from './util/index.js';\r\n\r\n// 在原型上添加一个init方法\r\nexport function initMixin(Vue){\r\n    // 初始化流程\r\n    Vue.prototype._init = function (options) {\r\n        // 数据的劫持\r\n        const vm = this; // vue中使用 this.$options 指代的就是用户传递的属性\r\n        //将用户传递的和全局的进行一个合并\r\n        vm.$options = mergeOptions(vm.constructor.options,options);\r\n        \r\n        callHook(vm,'beforeCreate')//初始化状态之前调用\r\n        // 初始化状态\r\n        initState(vm); // 分割代码\r\n        callHook(vm,'created')//初始化状态之后调用\r\n        // 如果用户传入了el属性 需要将页面渲染出来\r\n        // 如果用户传入了el 就要实现挂载流程\r\n        \r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        \r\n        const vm = this;\r\n        const options = vm.$options;\r\n        el = document.querySelector(el); \r\n        // 默认先会查找有没有render方法，没有render 会 采用template template也没有就用el中的内容\r\n        if(!options.render){\r\n            // 对模板进行编译\r\n            let template = options.template; // 取出模板\r\n            if(!template && el){\r\n                template = el.outerHTML;\r\n            }\r\n            const render = compileToFunction(template);\r\n            options.render = render;\r\n            // 我们需要将template 转化成render方法 vue1.0 2.0虚拟dom \r\n          //  console.log(render,options.render);\r\n            //渲染当前的组件 挂载当前的组件\r\n            mountComponent(vm,el)\r\n        }\r\n        \r\n      \r\n    }\r\n}","\r\nexport function createElement(tag, data={},...children){\r\n       let key = data.key;\r\n       if(key){\r\n           delete data.key; \r\n       }\r\n       return vnode(tag,data,key,children,undefined)\r\n\r\n}\r\n\r\nexport function createTextNode(text) {\r\n    return vnode(undefined,undefined,undefined,undefined,text);\r\n    \r\n}\r\n\r\nfunction vnode(tag,data,key,children,text) {\r\n   \r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text,\r\n    }\r\n    //虚拟节点 就是通过_c _v 实现用对象来描述dom操作 （对象）\r\n\r\n    // 1) 将 template 转成 ast语法树 =》 生产render方法 =》 生成虚拟dom =》 真实dom \r\n     // 重新生成虚拟dom =》 更新dom\r\n\r\n    \r\n}","import { createElement, createTextNode} from './vdom/create-element.js'\r\nexport function renderMixin(Vue){\r\n\r\n    //_c 是创建元素的虚拟节点\r\n    //_v 创建文本的虚拟节点\r\n    //_s JSON.stringify\r\n\r\n    Vue.prototype._c = function () {\r\n        return createElement(...arguments);  \r\n    }\r\n    Vue.prototype._v = function (text) {\r\n        return createTextNode(text);  \r\n    }\r\n    Vue.prototype._s = function (val) {\r\n        return val === null?'':(typeof val === 'object'? JSON.stringify(val):val)\r\n    }\r\n    Vue.prototype._render = function(){\r\n        const vm = this;\r\n        const { render } = this.$options;\r\n         let vnode =   render.call(vm);\r\n         return vnode;\r\n    }\r\n}\r\n","import { mergeOptions } from '../util/index.js'\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    Vue.options = {};\r\n    Vue.mixin = function (mixin) {\r\n        //如何实现两个对象的合并\r\n        this.options = mergeOptions(this.options,mixin)\r\n        \r\n    }\r\n    // 生命周期的合并策略[beforeCreate,beforeCreate];\r\n\r\n    Vue.mixin({\r\n        b:3,\r\n        beforeCreate(){\r\n            console.log('fn1')\r\n        }\r\n    })\r\n    Vue.mixin({\r\n        b:2,\r\n        beforeCreate(){\r\n            console.log('fn2')\r\n        }\r\n    })\r\n}","import { initMixin } from './init.js';\r\nimport {renderMixin} from './render.js'\r\nimport {lifecycleMixin } from './lifecycle.js';\r\nimport { initGlobalAPI } from './initGlobalAPI/index.js'\r\n\r\nfunction Vue(options){\r\n    this._init(options);\r\n\r\n}\r\n \r\ninitMixin(Vue);\r\nrenderMixin(Vue);\r\nlifecycleMixin(Vue);\r\n//初始化 全局的api\r\n\r\ninitGlobalAPI(Vue);\r\nexport default Vue;"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","oldArraymethods","Array","prototype","arrayMethods","create","methods","args","console","log","result","apply","inserted","ob","__ob__","slice","observerArray","id","Dep","constructor","subs","addSub","watcher","push","depend","target","addDep","notify","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","walk","__proto__","i","observe","keys","defineReactive","dep","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","Watcher","exprOrFn","callback","getter","depsId","Set","deps","has","add","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","class","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val","initGlobalAPI","mixin","b","beforeCreate"],"mappings":"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"}